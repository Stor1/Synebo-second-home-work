@isTest
public class AnimalLocatorTest {
	
	@isTest static void testGetAnimalNameById() {
        // Set mock callout class 
        Test.setMock(HttpCalloutMock.class, new AnimalLocatorMock()); 
        // This causes a fake response to be sent
        // from the class that implements HttpCalloutMock. 
        String response = AnimalLocator.getAnimalNameById(1);
        String expectedValue = 'chicken';
        System.assertEquals(response, expectedValue);
    }

	@isTest
    static void testGetAnimalById() {
    	
        Test.setMock(HttpCalloutMock.class, new AnimalLocatorMock());
        Animal response = AnimalLocator.getAnimalById(1);
        Animal expectedValue = new Animal();
        expectedValue.name = 'chicken';
        expectedValue.eats = 'chicken food';
        expectedValue.says = 'cluck cluck';
        expectedValue.id = '1';
        System.assertEquals(response, expectedValue);
        
    }
    
}